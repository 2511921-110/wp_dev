"use strict";function _typeof(n){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}!function(n){var e={};function t(a){if(e[a])return e[a].exports;var s=e[a]={i:a,l:!1,exports:{}};return n[a].call(s.exports,s,s.exports,t),s.l=!0,s.exports}t.m=n,t.c=e,t.d=function(n,e,a){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:a})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"===_typeof(n)&&n&&n.__esModule)return n;var a=Object.create(null);if(t.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var s in n)t.d(a,s,function(e){return n[e]}.bind(null,s));return a},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s="./js/app.js")}({"./js/app.js":
/*!*******************!*\
    !*** ./js/app.js ***!
    \*******************/
/*! no static exports found */
function jsAppJs(module,exports){eval("/*******************\r\n  Nav\r\n*******************/\nif (document.getElementsByClassName('globalNav')[0]) {\n  var wrap = document.querySelector('.menu__btnwrap');\n  var nav_el = document.querySelector('.spmenu_btn');\n  var nav_state_class = 'globalNav_state';\n  var nav_target_class = '.globalNav';\n  var nav_close_class = 'spmenu_btnClose';\n  var nav_wrap = document.querySelector('.menu');\n  wrap.addEventListener('click', function () {\n    if (document.querySelector('.' + nav_state_class) === null) {\n      document.querySelector(nav_target_class).classList.add(nav_state_class);\n      nav_el.classList.add(nav_close_class);\n    } else {\n      document.querySelector(nav_target_class).classList.remove(nav_state_class);\n      nav_el.classList.remove(nav_close_class);\n    }\n  }, false);\n  nav_wrap.addEventListener('click', function () {\n    document.querySelector(nav_target_class).classList.remove(nav_state_class);\n    nav_el.classList.remove(nav_close_class);\n  }, false);\n}\n/*******************\r\n  map\r\n*******************/\n\n\nif (document.getElementById('Map')) {\n  var mapInstance = new Vue({\n    el: \"#Map\",\n    data: function data() {\n      return {\n        lat: 34.6704542,\n        lng: 135.5013464,\n        zoom: 16,\n        icon: THEME_URL + \"/assets/mappin.png\",\n        geometry: {\n          hue: '#111',\n          // 色\n          gamma: 0.1,\n          // ガンマ 0.01 ~ 10\n          lightness: -70,\n          // 明度  -100 ~ 100\n          saturation: -100 // 彩度 -100 ~ 100\n\n        },\n        labels: {\n          hue: '#ae9e74',\n          // 色\n          gamma: 1,\n          // ガンマ\n          lightness: 0,\n          // 明度\n          saturation: -50 // 彩度\n\n        }\n      };\n    },\n    mounted: function mounted() {\n      var map;\n      var marker;\n      var center = {\n        lat: Number(this.lat),\n        // 緯度\n        lng: Number(this.lng) // 経度\n\n      };\n      map = new google.maps.Map(document.getElementById('Map'), {\n        // #sampleに地図を埋め込む\n        center: center,\n        // 地図の中心を指定\n        zoom: this.zoom,\n        // 地図のズームを指定\n        disableDefaultUI: true,\n        styles: [{\n          featureType: 'all',\n          elementType: 'geometry',\n          stylers: [{\n            hue: this.geometry.hue\n          }, {\n            gamma: this.geometry.gamma\n          }, {\n            lightness: this.geometry.lightness\n          }, {\n            saturation: this.geometry.saturation\n          }]\n        }, {\n          featureType: 'all',\n          elementType: 'labels',\n          stylers: [{\n            hue: this.labels.hue\n          }, {\n            gamma: this.labels.gamma\n          }, {\n            lightness: this.labels.lightness\n          }, {\n            saturation: this.labels.saturation\n          }]\n        }]\n      });\n      marker = new google.maps.Marker({\n        // マーカーの追加\n        position: center,\n        // マーカーを立てる位置を指定\n        map: map,\n        // マーカーを立てる地図を指定\n        icon: this.icon // マーカーのアイコン指定\n\n      });\n    }\n  });\n}\n\n//# sourceURL=webpack:///./js/app.js?")}});